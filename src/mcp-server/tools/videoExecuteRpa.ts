/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { videoExecuteRpa } from "../../funcs/videoExecuteRpa.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.ExecuteRpaStepsRequest$inboundSchema,
};

export const tool$videoExecuteRpa: ToolDefinition<typeof args> = {
  name: "video-execute-rpa",
  description: `Execute RPA steps from video analysis

Executes automation steps extracted from video analysis. This endpoint enables the system to perform actions it learned through visual observation. Using a reasoning-based approach, the automation adapts to dynamic UI elements and handles environmental variations while following the core workflow pattern. This creates resilient processes that maintain functionality even when the target system has minor visual or layout changes.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await videoExecuteRpa(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    return formatResult(void 0, apiCall);
  },
};

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { videoUpload } from "../../funcs/videoUpload.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: components.VideoUploadDto$inboundSchema,
};

export const tool$videoUpload: ToolDefinition<typeof args> = {
  name: "video-upload",
  description: `Upload a video for RPA analysis

Upload a video recording of any task to automatically generate RPA workflows. The system learns from visual demonstration by analyzing screen recordings through computer vision. It identifies and extracts patterns of interaction including mouse movements, clicks, typing actions, and navigation sequences, converting them directly into executable automation without requiring manual scripting or programming.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await videoUpload(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};

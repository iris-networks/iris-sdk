/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { videosSaveCurrentSession } from "../../funcs/videosSaveCurrentSession.js";
import { formatResult, ToolDefinition } from "../tools.js";

export const tool$videosSaveCurrentSession: ToolDefinition = {
  name: "videos-save-current-session",
  description: `Save current session as a recording

Saves the current active session as a video recording. This endpoint captures all screenshots collected during the session, stores them on disk, and initiates automatic video generation in the background. The video generation process happens asynchronously and can be monitored via the video-status endpoint. This recording captures both visual states and action contexts, creating a complete task record that can be analyzed, modified, or transformed into reusable automation workflows.`,
  tool: async (client, ctx) => {
    const [result, apiCall] = await videosSaveCurrentSession(
      client,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { videosGenerate } from "../../funcs/videosGenerate.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.GenerateVideoRequest$inboundSchema,
};

export const tool$videosGenerate: ToolDefinition<typeof args> = {
  name: "videos-generate",
  description: `Generate a video from the recording frames

Creates a video file from the frames of a recording with customizable options. This endpoint allows you to specify frame rate, caption settings, output format, and quality level. By default, videos play at 0.2 frames per second (5 seconds per frame) to allow time to read the captions. Videos are generated asynchronously, and you can check the status using the video-status endpoint. Note that videos are also generated automatically when a recording is created, so this endpoint is mostly useful for regenerating with different settings. The generated video will have the correct duration with each screenshot displayed for the specified amount of time.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await videosGenerate(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};

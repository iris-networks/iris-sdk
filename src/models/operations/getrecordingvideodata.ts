/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetRecordingVideoDataRequest = {
  /**
   * The ID of the recording to get video data for
   */
  id: string;
};

/** @internal */
export const GetRecordingVideoDataRequest$inboundSchema: z.ZodType<
  GetRecordingVideoDataRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetRecordingVideoDataRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetRecordingVideoDataRequest$outboundSchema: z.ZodType<
  GetRecordingVideoDataRequest$Outbound,
  z.ZodTypeDef,
  GetRecordingVideoDataRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRecordingVideoDataRequest$ {
  /** @deprecated use `GetRecordingVideoDataRequest$inboundSchema` instead. */
  export const inboundSchema = GetRecordingVideoDataRequest$inboundSchema;
  /** @deprecated use `GetRecordingVideoDataRequest$outboundSchema` instead. */
  export const outboundSchema = GetRecordingVideoDataRequest$outboundSchema;
  /** @deprecated use `GetRecordingVideoDataRequest$Outbound` instead. */
  export type Outbound = GetRecordingVideoDataRequest$Outbound;
}

export function getRecordingVideoDataRequestToJSON(
  getRecordingVideoDataRequest: GetRecordingVideoDataRequest,
): string {
  return JSON.stringify(
    GetRecordingVideoDataRequest$outboundSchema.parse(
      getRecordingVideoDataRequest,
    ),
  );
}

export function getRecordingVideoDataRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetRecordingVideoDataRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetRecordingVideoDataRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetRecordingVideoDataRequest' from JSON`,
  );
}

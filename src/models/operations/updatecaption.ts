/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateCaptionRequest = {
  /**
   * The ID of the recording
   */
  id: string;
  /**
   * The index of the frame to update caption for
   */
  frameIndex: number;
  /**
   * New caption text
   */
  updateCaptionDto: components.UpdateCaptionDto;
};

/** @internal */
export const UpdateCaptionRequest$inboundSchema: z.ZodType<
  UpdateCaptionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  frameIndex: z.number(),
  UpdateCaptionDto: components.UpdateCaptionDto$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "UpdateCaptionDto": "updateCaptionDto",
  });
});

/** @internal */
export type UpdateCaptionRequest$Outbound = {
  id: string;
  frameIndex: number;
  UpdateCaptionDto: components.UpdateCaptionDto$Outbound;
};

/** @internal */
export const UpdateCaptionRequest$outboundSchema: z.ZodType<
  UpdateCaptionRequest$Outbound,
  z.ZodTypeDef,
  UpdateCaptionRequest
> = z.object({
  id: z.string(),
  frameIndex: z.number(),
  updateCaptionDto: components.UpdateCaptionDto$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    updateCaptionDto: "UpdateCaptionDto",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateCaptionRequest$ {
  /** @deprecated use `UpdateCaptionRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateCaptionRequest$inboundSchema;
  /** @deprecated use `UpdateCaptionRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateCaptionRequest$outboundSchema;
  /** @deprecated use `UpdateCaptionRequest$Outbound` instead. */
  export type Outbound = UpdateCaptionRequest$Outbound;
}

export function updateCaptionRequestToJSON(
  updateCaptionRequest: UpdateCaptionRequest,
): string {
  return JSON.stringify(
    UpdateCaptionRequest$outboundSchema.parse(updateCaptionRequest),
  );
}

export function updateCaptionRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateCaptionRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateCaptionRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateCaptionRequest' from JSON`,
  );
}

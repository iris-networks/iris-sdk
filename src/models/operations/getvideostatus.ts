/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetVideoStatusRequest = {
  /**
   * The ID of the recording to check video status for
   */
  id: string;
};

/** @internal */
export const GetVideoStatusRequest$inboundSchema: z.ZodType<
  GetVideoStatusRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetVideoStatusRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetVideoStatusRequest$outboundSchema: z.ZodType<
  GetVideoStatusRequest$Outbound,
  z.ZodTypeDef,
  GetVideoStatusRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetVideoStatusRequest$ {
  /** @deprecated use `GetVideoStatusRequest$inboundSchema` instead. */
  export const inboundSchema = GetVideoStatusRequest$inboundSchema;
  /** @deprecated use `GetVideoStatusRequest$outboundSchema` instead. */
  export const outboundSchema = GetVideoStatusRequest$outboundSchema;
  /** @deprecated use `GetVideoStatusRequest$Outbound` instead. */
  export type Outbound = GetVideoStatusRequest$Outbound;
}

export function getVideoStatusRequestToJSON(
  getVideoStatusRequest: GetVideoStatusRequest,
): string {
  return JSON.stringify(
    GetVideoStatusRequest$outboundSchema.parse(getVideoStatusRequest),
  );
}

export function getVideoStatusRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetVideoStatusRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetVideoStatusRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetVideoStatusRequest' from JSON`,
  );
}

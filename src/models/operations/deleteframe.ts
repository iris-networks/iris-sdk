/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteFrameRequest = {
  /**
   * The ID of the recording
   */
  id: string;
  /**
   * The index of the frame to delete
   */
  frameIndex: number;
};

/** @internal */
export const DeleteFrameRequest$inboundSchema: z.ZodType<
  DeleteFrameRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  frameIndex: z.number(),
});

/** @internal */
export type DeleteFrameRequest$Outbound = {
  id: string;
  frameIndex: number;
};

/** @internal */
export const DeleteFrameRequest$outboundSchema: z.ZodType<
  DeleteFrameRequest$Outbound,
  z.ZodTypeDef,
  DeleteFrameRequest
> = z.object({
  id: z.string(),
  frameIndex: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteFrameRequest$ {
  /** @deprecated use `DeleteFrameRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteFrameRequest$inboundSchema;
  /** @deprecated use `DeleteFrameRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteFrameRequest$outboundSchema;
  /** @deprecated use `DeleteFrameRequest$Outbound` instead. */
  export type Outbound = DeleteFrameRequest$Outbound;
}

export function deleteFrameRequestToJSON(
  deleteFrameRequest: DeleteFrameRequest,
): string {
  return JSON.stringify(
    DeleteFrameRequest$outboundSchema.parse(deleteFrameRequest),
  );
}

export function deleteFrameRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteFrameRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteFrameRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteFrameRequest' from JSON`,
  );
}

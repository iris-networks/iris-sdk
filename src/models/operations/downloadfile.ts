/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DownloadFileRequest = {
  /**
   * Filename
   */
  filename: string;
};

/** @internal */
export const DownloadFileRequest$inboundSchema: z.ZodType<
  DownloadFileRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  filename: z.string(),
});

/** @internal */
export type DownloadFileRequest$Outbound = {
  filename: string;
};

/** @internal */
export const DownloadFileRequest$outboundSchema: z.ZodType<
  DownloadFileRequest$Outbound,
  z.ZodTypeDef,
  DownloadFileRequest
> = z.object({
  filename: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DownloadFileRequest$ {
  /** @deprecated use `DownloadFileRequest$inboundSchema` instead. */
  export const inboundSchema = DownloadFileRequest$inboundSchema;
  /** @deprecated use `DownloadFileRequest$outboundSchema` instead. */
  export const outboundSchema = DownloadFileRequest$outboundSchema;
  /** @deprecated use `DownloadFileRequest$Outbound` instead. */
  export type Outbound = DownloadFileRequest$Outbound;
}

export function downloadFileRequestToJSON(
  downloadFileRequest: DownloadFileRequest,
): string {
  return JSON.stringify(
    DownloadFileRequest$outboundSchema.parse(downloadFileRequest),
  );
}

export function downloadFileRequestFromJSON(
  jsonString: string,
): SafeParseResult<DownloadFileRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DownloadFileRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DownloadFileRequest' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListArtifactsRequest = {
  /**
   * Path relative to .iris folder
   */
  path?: string | undefined;
};

/** @internal */
export const ListArtifactsRequest$inboundSchema: z.ZodType<
  ListArtifactsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  path: z.string().optional(),
});

/** @internal */
export type ListArtifactsRequest$Outbound = {
  path?: string | undefined;
};

/** @internal */
export const ListArtifactsRequest$outboundSchema: z.ZodType<
  ListArtifactsRequest$Outbound,
  z.ZodTypeDef,
  ListArtifactsRequest
> = z.object({
  path: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListArtifactsRequest$ {
  /** @deprecated use `ListArtifactsRequest$inboundSchema` instead. */
  export const inboundSchema = ListArtifactsRequest$inboundSchema;
  /** @deprecated use `ListArtifactsRequest$outboundSchema` instead. */
  export const outboundSchema = ListArtifactsRequest$outboundSchema;
  /** @deprecated use `ListArtifactsRequest$Outbound` instead. */
  export type Outbound = ListArtifactsRequest$Outbound;
}

export function listArtifactsRequestToJSON(
  listArtifactsRequest: ListArtifactsRequest,
): string {
  return JSON.stringify(
    ListArtifactsRequest$outboundSchema.parse(listArtifactsRequest),
  );
}

export function listArtifactsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListArtifactsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListArtifactsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListArtifactsRequest' from JSON`,
  );
}

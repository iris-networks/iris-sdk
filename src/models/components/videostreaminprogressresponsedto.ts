/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Status of video generation
 */
export const VideoStreamInProgressResponseDtoStatus = {
  InProgress: "in_progress",
} as const;
/**
 * Status of video generation
 */
export type VideoStreamInProgressResponseDtoStatus = ClosedEnum<
  typeof VideoStreamInProgressResponseDtoStatus
>;

export type VideoStreamInProgressResponseDto = {
  /**
   * Status of video generation
   */
  status: VideoStreamInProgressResponseDtoStatus;
  /**
   * Human-readable status message
   */
  message: string;
  /**
   * Timestamp when video generation started
   */
  startedAt?: number | undefined;
};

/** @internal */
export const VideoStreamInProgressResponseDtoStatus$inboundSchema:
  z.ZodNativeEnum<typeof VideoStreamInProgressResponseDtoStatus> = z.nativeEnum(
    VideoStreamInProgressResponseDtoStatus,
  );

/** @internal */
export const VideoStreamInProgressResponseDtoStatus$outboundSchema:
  z.ZodNativeEnum<typeof VideoStreamInProgressResponseDtoStatus> =
    VideoStreamInProgressResponseDtoStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VideoStreamInProgressResponseDtoStatus$ {
  /** @deprecated use `VideoStreamInProgressResponseDtoStatus$inboundSchema` instead. */
  export const inboundSchema =
    VideoStreamInProgressResponseDtoStatus$inboundSchema;
  /** @deprecated use `VideoStreamInProgressResponseDtoStatus$outboundSchema` instead. */
  export const outboundSchema =
    VideoStreamInProgressResponseDtoStatus$outboundSchema;
}

/** @internal */
export const VideoStreamInProgressResponseDto$inboundSchema: z.ZodType<
  VideoStreamInProgressResponseDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: VideoStreamInProgressResponseDtoStatus$inboundSchema,
  message: z.string(),
  startedAt: z.number().optional(),
});

/** @internal */
export type VideoStreamInProgressResponseDto$Outbound = {
  status: string;
  message: string;
  startedAt?: number | undefined;
};

/** @internal */
export const VideoStreamInProgressResponseDto$outboundSchema: z.ZodType<
  VideoStreamInProgressResponseDto$Outbound,
  z.ZodTypeDef,
  VideoStreamInProgressResponseDto
> = z.object({
  status: VideoStreamInProgressResponseDtoStatus$outboundSchema,
  message: z.string(),
  startedAt: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VideoStreamInProgressResponseDto$ {
  /** @deprecated use `VideoStreamInProgressResponseDto$inboundSchema` instead. */
  export const inboundSchema = VideoStreamInProgressResponseDto$inboundSchema;
  /** @deprecated use `VideoStreamInProgressResponseDto$outboundSchema` instead. */
  export const outboundSchema = VideoStreamInProgressResponseDto$outboundSchema;
  /** @deprecated use `VideoStreamInProgressResponseDto$Outbound` instead. */
  export type Outbound = VideoStreamInProgressResponseDto$Outbound;
}

export function videoStreamInProgressResponseDtoToJSON(
  videoStreamInProgressResponseDto: VideoStreamInProgressResponseDto,
): string {
  return JSON.stringify(
    VideoStreamInProgressResponseDto$outboundSchema.parse(
      videoStreamInProgressResponseDto,
    ),
  );
}

export function videoStreamInProgressResponseDtoFromJSON(
  jsonString: string,
): SafeParseResult<VideoStreamInProgressResponseDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VideoStreamInProgressResponseDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VideoStreamInProgressResponseDto' from JSON`,
  );
}

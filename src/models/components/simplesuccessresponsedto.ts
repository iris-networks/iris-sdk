/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SimpleSuccessResponseDto = {
  /**
   * Whether the operation was successful
   */
  success: boolean;
  /**
   * Optional message with additional details
   */
  message?: string | undefined;
};

/** @internal */
export const SimpleSuccessResponseDto$inboundSchema: z.ZodType<
  SimpleSuccessResponseDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean(),
  message: z.string().optional(),
});

/** @internal */
export type SimpleSuccessResponseDto$Outbound = {
  success: boolean;
  message?: string | undefined;
};

/** @internal */
export const SimpleSuccessResponseDto$outboundSchema: z.ZodType<
  SimpleSuccessResponseDto$Outbound,
  z.ZodTypeDef,
  SimpleSuccessResponseDto
> = z.object({
  success: z.boolean(),
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SimpleSuccessResponseDto$ {
  /** @deprecated use `SimpleSuccessResponseDto$inboundSchema` instead. */
  export const inboundSchema = SimpleSuccessResponseDto$inboundSchema;
  /** @deprecated use `SimpleSuccessResponseDto$outboundSchema` instead. */
  export const outboundSchema = SimpleSuccessResponseDto$outboundSchema;
  /** @deprecated use `SimpleSuccessResponseDto$Outbound` instead. */
  export type Outbound = SimpleSuccessResponseDto$Outbound;
}

export function simpleSuccessResponseDtoToJSON(
  simpleSuccessResponseDto: SimpleSuccessResponseDto,
): string {
  return JSON.stringify(
    SimpleSuccessResponseDto$outboundSchema.parse(simpleSuccessResponseDto),
  );
}

export function simpleSuccessResponseDtoFromJSON(
  jsonString: string,
): SafeParseResult<SimpleSuccessResponseDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SimpleSuccessResponseDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SimpleSuccessResponseDto' from JSON`,
  );
}

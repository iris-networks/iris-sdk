/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CaptionDataDto,
  CaptionDataDto$inboundSchema,
  CaptionDataDto$Outbound,
  CaptionDataDto$outboundSchema,
} from "./captiondatadto.js";

export type FramesAndCaptionsResponseDto = {
  /**
   * Whether the operation was successful
   */
  success: boolean;
  /**
   * Array of base64-encoded frames
   */
  frames: Array<string>;
  /**
   * Array of caption data objects
   */
  captions: Array<CaptionDataDto>;
};

/** @internal */
export const FramesAndCaptionsResponseDto$inboundSchema: z.ZodType<
  FramesAndCaptionsResponseDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.boolean(),
  frames: z.array(z.string()),
  captions: z.array(CaptionDataDto$inboundSchema),
});

/** @internal */
export type FramesAndCaptionsResponseDto$Outbound = {
  success: boolean;
  frames: Array<string>;
  captions: Array<CaptionDataDto$Outbound>;
};

/** @internal */
export const FramesAndCaptionsResponseDto$outboundSchema: z.ZodType<
  FramesAndCaptionsResponseDto$Outbound,
  z.ZodTypeDef,
  FramesAndCaptionsResponseDto
> = z.object({
  success: z.boolean(),
  frames: z.array(z.string()),
  captions: z.array(CaptionDataDto$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FramesAndCaptionsResponseDto$ {
  /** @deprecated use `FramesAndCaptionsResponseDto$inboundSchema` instead. */
  export const inboundSchema = FramesAndCaptionsResponseDto$inboundSchema;
  /** @deprecated use `FramesAndCaptionsResponseDto$outboundSchema` instead. */
  export const outboundSchema = FramesAndCaptionsResponseDto$outboundSchema;
  /** @deprecated use `FramesAndCaptionsResponseDto$Outbound` instead. */
  export type Outbound = FramesAndCaptionsResponseDto$Outbound;
}

export function framesAndCaptionsResponseDtoToJSON(
  framesAndCaptionsResponseDto: FramesAndCaptionsResponseDto,
): string {
  return JSON.stringify(
    FramesAndCaptionsResponseDto$outboundSchema.parse(
      framesAndCaptionsResponseDto,
    ),
  );
}

export function framesAndCaptionsResponseDtoFromJSON(
  jsonString: string,
): SafeParseResult<FramesAndCaptionsResponseDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FramesAndCaptionsResponseDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FramesAndCaptionsResponseDto' from JSON`,
  );
}
